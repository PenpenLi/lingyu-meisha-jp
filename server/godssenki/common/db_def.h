#ifndef _db_def_h_
#define _db_def_h_
#include <stdint.h>
#include <sstream>
using namespace std;
#include "sql_result.h"
#include "db_helper.h"
#include "dbgl_service.h"
#include "db_service.h"
#include "ystring.h"
struct db_ActDailyTask_t {
int32_t uid;
uint32_t stamp;
int32_t resid;
int32_t step;
int32_t collect;
static const char* tablename(){ return "ActDailyTask"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventUserLog_t {
int32_t score;
int32_t goal_level;
int32_t hostnum;
int32_t season;
int32_t round;
float hp5;
float hp4;
int32_t anger;
float hp3;
int32_t coin;
int32_t round_status;
float hp2;
int32_t pid3;
string enemy_view_data;
int32_t pid5;
int32_t pid1;
int32_t uid;
int32_t pid4;
int32_t pid2;
int32_t round_max;
int32_t difficult;
int32_t reset_time;
float hp1;
static const char* tablename(){ return "CardEventUserLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Treasure_t {
int32_t uid;
int32_t utime;
int32_t reset_num;
static const char* tablename(){ return "Treasure"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventUserPartner_t {
int32_t uid;
int32_t pid;
float hp;
static const char* tablename(){ return "CardEventUserPartner"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Star_t {
int32_t uid;
int32_t pid;
int32_t value;
int32_t lv;
int32_t att;
int32_t pos;
static const char* tablename(){ return "Star"; }
int init(sql_result_row_t& row_);
static int select_star(const int32_t& uid_, sql_result_t &res_);
static int sync_select_star(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ChipShop_t {
uint32_t buystamp;
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "ChipShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Vip_t {
uint32_t stamp;
int32_t uid;
int32_t vop;
int32_t num;
static const char* tablename(){ return "Vip"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_NewRole_t {
ystring_t<64> mac;
int32_t uid;
int32_t hostnum;
ystring_t<30> ctime;
int32_t aid;
ystring_t<10> domain;
static const char* tablename(){ return "NewRole"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_PlantShop_t {
uint32_t buystamp;
int32_t uid;
int32_t plantid;
int32_t count;
static const char* tablename(){ return "PlantShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RankSeason_t {
int32_t uid;
int32_t score;
int32_t last_fight_stamp;
int32_t max_rank;
int32_t successive_defeat;
int32_t season;
int32_t rank;
static const char* tablename(){ return "RankSeason"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_TreasureSlot_t {
string nickname;
int32_t slot_type;
int32_t stamp;
int32_t resid;
int32_t id;
int32_t begin_pvp_fight_time;
int32_t grade;
int32_t is_pvp_fighting;
string robers;
int32_t uid;
int32_t lovelevel;
int32_t hostnum;
int32_t rob_money;
int32_t slot_pos;
int32_t fp;
int32_t n_rob;
static const char* tablename(){ return "TreasureSlot"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& hostnum_, const int32_t& slot_type_, const int32_t& slot_pos_, sql_result_t &res_);
static int sync_select(const int32_t& hostnum_, const int32_t& slot_type_, const int32_t& slot_pos_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Achievement_t {
int32_t uid;
int32_t tasktype;
int32_t resid;
int32_t systype;
uint32_t stamp;
int32_t step;
int32_t collect;
static const char* tablename(){ return "Achievement"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Online_t {
uint32_t loginstamp;
int32_t exp;
int32_t serid;
ystring_t<20> os;
int32_t hostnum;
int32_t aid;
int32_t sys;
ystring_t<30> nickname;
int32_t resid;
ystring_t<20> device;
int32_t questid;
ystring_t<10> domain;
int32_t uid;
ystring_t<32> name;
int32_t vip;
int32_t grade;
ystring_t<64> mac;
ystring_t<30> logintm;
int32_t counttime;
static const char* tablename(){ return "Online"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Expedition_t {
int32_t open_box;
float hp4;
int32_t is_refresh_today;
float hp3;
int32_t refresh_type;
int32_t resid;
float hp2;
int32_t pid3;
int32_t utime;
string view_data;
int32_t uid;
int32_t pid4;
int32_t pid2;
int32_t pid1;
float hp5;
int32_t pid5;
float hp1;
static const char* tablename(){ return "Expedition"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Mail_t {
ystring_t<500> info;
int32_t uid;
static const char* tablename(){ return "Mail"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GangUser_t {
uint32_t todaycount;
int32_t flag;
uint32_t bossrewardcount;
int32_t hostnum;
int32_t totalgm;
int32_t skl8;
int32_t skl6;
uint32_t lastenter;
ystring_t<30> nickname;
uint32_t lastquit;
int32_t skl7;
int32_t skl5;
int32_t skl1;
int32_t ggid;
int32_t grade;
int32_t skl2;
uint32_t lastboss;
int32_t uid;
int32_t skl4;
int32_t skl3;
uint32_t bossrewardtime;
int32_t gm;
int32_t state;
int32_t rank;
static const char* tablename(){ return "GangUser"; }
int init(sql_result_row_t& row_);
static int select_ganguser(const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_ganguser(const int32_t& hostnum_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ChatUser_t {
int32_t id;
int32_t uid;
int32_t player_uid;
int32_t stmp;
static const char* tablename(){ return "ChatUser"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GangBossGuwu_t {
int32_t uid;
int32_t stamp_yb;
int32_t progress;
int32_t stamp_coin;
int32_t stamp_v;
float v;
static const char* tablename(){ return "GangBossGuwu"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ChipValue_t {
int32_t trend;
int32_t hostnum;
int32_t id;
int32_t resid;
int32_t price;
int32_t cur_value;
static const char* tablename(){ return "ChipValue"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_all(const int32_t& hostnum_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Skill_t {
int32_t uid;
int32_t pid;
int32_t resid;
int32_t skid;
int32_t level;
static const char* tablename(){ return "Skill"; }
int init(sql_result_row_t& row_);
static int select_skill(const int32_t& uid_, sql_result_t &res_);
static int sync_select_skill(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Host_t {
int state;
int hostnum;
int id;
uint32_t stoptm;
string jstr;
string platname;
static const char* tablename(){ return "Host"; }
int init(sql_result_row_t& row_);
static int select(const int& hostnum_, const string& platname_, sql_result_t &res_);
static int sync_select(const int& hostnum_, const string& platname_, sql_result_t &res_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Shop_t {
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "Shop"; }
int init(sql_result_row_t& row_);
static int select_shop(const int32_t& uid_, sql_result_t &res_);
static int sync_select_shop(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_SpShop_t {
int32_t item11;
int32_t item10;
int32_t item8;
int32_t item12;
int32_t item4;
int32_t item2;
int32_t uid;
int32_t item6;
int32_t item9;
int32_t item7;
int32_t item5;
int32_t item3;
int32_t item1;
static const char* tablename(){ return "SpShop"; }
int init(sql_result_row_t& row_);
static int select_spshop(const int32_t& uid_, sql_result_t &res_);
static int sync_select_spshop(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RuneItem_t {
int32_t uid;
int32_t resid;
int32_t id;
int32_t level;
int32_t exp;
static const char* tablename(){ return "RuneItem"; }
int init(sql_result_row_t& row_);
static int select_rune_item_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_rune_item_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_FriendFlower_t {
int32_t fuid;
uint32_t stamp;
int32_t id;
int32_t getPower;
int32_t uid;
ystring_t<30> name;
int32_t lifetime;
int32_t lv;
int32_t headid;
static const char* tablename(){ return "FriendFlower"; }
int init(sql_result_row_t& row_);
static int select_friend_flower(const int32_t& uid_, sql_result_t &res_);
static int sync_select_friend_flower(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_HomeFarm_t {
int32_t getstamp;
int32_t isend;
int32_t losetime;
int32_t getnum;
int32_t uid;
int32_t canrob;
int32_t cstamp;
int32_t farmid;
int32_t itemid;
static const char* tablename(){ return "HomeFarm"; }
int init(sql_result_row_t& row_);
static int select_id(const int32_t& uid_, sql_result_t &res_);
static int sync_select_id(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Gang_t {
int32_t todaycount;
int32_t exp;
ystring_t<100> notice;
int32_t ggid;
int32_t bosscount;
int32_t bossday;
int32_t lastboss;
ystring_t<30> name;
int32_t hostnum;
int32_t level;
int32_t bosslv;
static const char* tablename(){ return "Gang"; }
int init(sql_result_row_t& row_);
static int select_host_gang(const int32_t& hostnum_, sql_result_t &res_);
static int select_ganginfo(const int32_t& ggid_, sql_result_t &res_);
static int select_gang(const int32_t& ggid_, const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_host_gang(const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_ganginfo(const int32_t& ggid_, sql_result_t &res_);
static int sync_select_gang(const int32_t& ggid_, const int32_t& hostnum_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Soul_t {
int32_t state;
int32_t uid;
int32_t time;
int32_t gem_need;
int32_t level;
int32_t rare;
int32_t soul_id;
static const char* tablename(){ return "Soul"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_LoveTask_t {
int32_t state;
int32_t uid;
int32_t pid;
int32_t resid;
int32_t step;
static const char* tablename(){ return "LoveTask"; }
int init(sql_result_row_t& row_);
static int select_love_task_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_love_task_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ArenaInfo_t {
int32_t total_fp;
int32_t pid3;
int32_t uid;
int32_t pid4;
int32_t hostnum;
int32_t pid1;
int32_t level;
int32_t pid5;
int32_t pid2;
static const char* tablename(){ return "ArenaInfo"; }
int init(sql_result_row_t& row_);
static int select_hostnum(const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_hostnum(const int32_t& hostnum_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_QuitLog_t {
int32_t exp;
int32_t step;
ystring_t<20> os;
int32_t hostnum;
int32_t aid;
ystring_t<30> quittm;
ystring_t<30> nickname;
int32_t resid;
ystring_t<20> device;
int32_t totaltime;
ystring_t<10> domain;
int32_t questid;
int32_t vip;
int32_t uid;
ystring_t<32> name;
int32_t grade;
int32_t sys;
ystring_t<64> mac;
ystring_t<30> logintm;
int32_t counttime;
static const char* tablename(){ return "QuitLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_PrivateChat_t {
int32_t acuid;
int32_t resid;
int32_t id;
string msg;
int32_t grade;
int32_t suid;
string name;
int32_t hostnum;
int32_t typeindex;
int32_t vip;
int32_t quality;
static const char* tablename(){ return "PrivateChat"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& suid_, const int32_t& acuid_, sql_result_t &res_);
static int sync_select_all(const int32_t& suid_, const int32_t& acuid_, sql_result_t &res_);
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Wing_t {
int32_t lucky;
int32_t isweared;
int32_t resid;
int32_t mgc;
int32_t hp;
int32_t dodge;
int32_t uid;
int32_t acc;
int32_t wid;
int32_t def;
int32_t res;
int32_t crit;
int32_t atk;
static const char* tablename(){ return "Wing"; }
int init(sql_result_row_t& row_);
static int select_wing_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_wing_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ExpeditionTeam_t {
int32_t anger;
int32_t uid;
int32_t pid4;
int32_t pid2;
int32_t pid1;
int32_t pid3;
int32_t pid5;
static const char* tablename(){ return "ExpeditionTeam"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RuneInfo_t {
int32_t uid;
int32_t hunt_level;
int32_t page_num;
static const char* tablename(){ return "RuneInfo"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_YBLog_t {
int32_t price;
int32_t serid;
ystring_t<30> giventm;
int32_t hostnum;
int32_t aid;
ystring_t<30> nickname;
int32_t resid;
ystring_t<30> tradetm;
ystring_t<10> domain;
int32_t rmb;
int32_t totalyb;
int32_t uid;
ystring_t<32> name;
int32_t count;
ystring_t<32> appid;
int32_t payyb;
int32_t freeyb;
int32_t sid;
static const char* tablename(){ return "YBLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventShop_t {
int32_t uid;
int32_t count;
int32_t shopindex;
int32_t shopid;
uint32_t refresh_time;
static const char* tablename(){ return "CardEventShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Compensate_t {
int32_t state;
uint32_t uid;
uint32_t count;
uint32_t resid;
uint32_t id;
uint32_t givenstamp;
static const char* tablename(){ return "Compensate"; }
int init(sql_result_row_t& row_);
static int select_compensate(const uint32_t& uid_, const int32_t& state_, sql_result_t &res_);
static int sync_select_compensate(const uint32_t& uid_, const int32_t& state_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_PubMgr_t {
int32_t pub_sum;
int32_t uid;
int32_t pub_4_first;
int32_t stepup_state;
int32_t event_state;
int32_t pub_3_first;
static const char* tablename(){ return "PubMgr"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_FeedbackFlag_t {
int32_t id;
int32_t uid;
static const char* tablename(){ return "FeedbackFlag"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Reward_t {
int32_t adt_reward;
uint32_t given_power_stamp;
int32_t lv_40;
int32_t inv_reward4;
int32_t vip10;
int32_t vip13;
int32_t vip16;
int32_t acc_lg16;
int32_t con_lg6;
int32_t acc_lg18;
int32_t daily_draw_stamp;
int32_t vip7;
ystring_t<30> login_rewards;
int32_t acc_lg9;
int32_t acc_lg23;
int32_t conequip;
int32_t vip8;
int32_t acc_lg19;
ystring_t<30> luckybag_reward;
uint32_t mcard_event_state;
int32_t vip15;
int32_t wingactivityreward;
int32_t limit_melting;
int32_t vip12;
int32_t vip11;
int32_t uid;
int32_t acc_lg5;
int32_t lv_70;
int32_t acc_yb2;
int32_t next_online;
int32_t cumu_yb_exp;
int32_t daily_pay_stamp;
int32_t daily_consume_ap_stamp;
int32_t acc_lg6;
int32_t daily_talent;
int32_t daily_consume_ap;
ystring_t<10> daily_draw_reward;
int32_t acc_yb3;
int32_t acc_yb6;
int32_t acc_yb5;
uint32_t mcardtm;
ystring_t<30> limit_wing_reward;
int32_t acc_lg17;
int32_t double_expedition;
int32_t daily_melting;
int32_t lv_65;
int32_t inv_reward1;
int32_t acc_lg20;
int32_t growing_package_status;
int32_t acc_lg3;
ystring_t<30> limit_draw_ten_reward;
uint32_t first_login;
int32_t vip4;
int32_t online;
uint32_t mcardbuytm;
int32_t limit_single_stamp;
int32_t cumulevel;
int32_t con_lg3;
int32_t inv_reward3;
int32_t con_lg4;
int32_t acc_yb4;
int32_t vip5;
uint32_t adt_stamp;
int32_t con_lg5;
int32_t can_get_first;
int32_t vip3;
int32_t lv_35;
int32_t acc_lg1;
int32_t lv_55;
ystring_t<10> limit_melting_reward;
int32_t daily_draw;
int32_t vip17;
ystring_t<30> growing_reward;
int32_t login_days;
int32_t cumureward;
int32_t acc_lg22;
int32_t vip1;
int32_t vip6;
int32_t acc_yb1;
int32_t acc_lg7;
int32_t acc_yb7;
int32_t lv_60;
int32_t vip18;
int32_t acc_lg14;
int32_t conhero;
uint32_t vip_package_stamp;
int32_t wingactivity;
int32_t daily_pay_reward;
int32_t pvelose_times;
int32_t lv_30;
int32_t lv_20;
int32_t limit_draw_ten;
ystring_t<10> daily_consume_ap_reward;
int32_t cumu_yb_reward;
int32_t acc_lg12;
int32_t con_lg7;
int32_t conlglevel;
int32_t fpreward;
uint32_t mcard_event_buy_count;
int32_t mcardn;
int32_t lv_50;
int32_t lv_45;
ystring_t<10> limit_talent_reward;
int32_t limit_consume_power_stamp;
int32_t limit_recharge_money;
int32_t daily_pay;
int32_t acc_lg4;
int32_t inviter;
int32_t inv_reward2;
int32_t vip9;
int32_t invcode;
uint32_t last_login;
int32_t acc_lg15;
int32_t acclgexp;
int32_t week_reward;
int32_t limit_talent;
int32_t daily_talent_stamp;
ystring_t<10> daily_talent_reward;
int32_t daily_melting_stamp;
int32_t con_lg2;
ystring_t<10> daily_melting_reward;
ystring_t<10> limit_single_reward;
int32_t limit_single_recharge;
ystring_t<10> limit_recharge_reward;
int32_t lv_25;
ystring_t<30> limit_consume_power_reward;
int32_t limit_consume_power;
int32_t yblevel;
int32_t is_consume_hundred;
int32_t total_login_days;
int32_t con_lg1;
int32_t acc_lg24;
int32_t acc_lg21;
int32_t acc_lg13;
int32_t acc_lg11;
int32_t acc_lg10;
int32_t first_yb;
int32_t acc_lg8;
int32_t vip2;
int32_t acc_lg2;
int32_t vip14;
int32_t acclglevel;
uint32_t given_rank_stamp;
static const char* tablename(){ return "Reward"; }
int init(sql_result_row_t& row_);
static int select_reward(const int32_t& uid_, sql_result_t &res_);
static int sync_select_reward(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_UserInfo_t {
int32_t spshopbuy;
int32_t useFlower;
int32_t nextquestid;
int32_t spshoprefresh;
int32_t last_power_stamp;
int32_t sceneid;
int32_t eliteid;
ystring_t<30> nickname;
int32_t lovelevel;
int32_t draw_ten_diamond;
uint32_t totaltime;
int32_t grade;
int32_t naviClickNum2;
int32_t potential_5;
int32_t draw_num;
int32_t energy;
int32_t headid;
int32_t zodiacid;
int32_t flush1times;
int32_t flush2times;
uint32_t npcshoptime3;
int32_t unhonor;
int32_t flush2round;
int32_t flush1round;
int32_t kanban;
int32_t hostnum;
int32_t hhresid;
int32_t sign_cost;
int32_t fpoint;
uint32_t chronicle_sum;
int32_t resid;
int32_t battlexp;
int32_t questid;
int32_t utype;
int32_t uid;
int32_t rank;
uint32_t createtime;
int32_t hm_maxid;
uint32_t sign_daily;
uint32_t useFlowerStamp;
uint32_t resetFlowerStamp;
ystring_t<30> draw_reward;
int32_t caveid;
int32_t npcshopbuy;
int32_t vipexp;
int32_t payyb;
int32_t limitround;
int32_t boxe;
uint32_t spshoptime;
int32_t aid;
int32_t sign_month;
int32_t quality;
int32_t isnew;
int32_t twoprecord;
int32_t naviClickNum1;
int32_t helphero;
int32_t soul;
int32_t power;
uint32_t npcshoptime1;
int32_t potential_2;
ystring_t<30> round_stars_reward;
int32_t elite_roundid;
uint32_t npcshop;
int32_t model;
ystring_t<1024> elite_round_times;
int32_t expeditioncoin;
int32_t meritorious;
int32_t bagn;
int32_t fp;
int32_t honor;
uint32_t zodiacstamp;
int32_t exp;
int32_t flush2first;
int32_t numFlower;
uint64_t func;
int32_t firstpay;
int32_t boxn;
int32_t isnewlv;
ystring_t<1024> roundstars;
int32_t potential_3;
int32_t frd;
int32_t viplevel;
int32_t m_rank;
ystring_t<1024> elite_reset_times;
int32_t titlelv;
uint32_t lastquit;
int32_t treasure;
int32_t kanban_type;
int32_t roundid;
int32_t runechip;
int32_t specicalshop;
int32_t potential_4;
int32_t potential_1;
uint32_t npcshoptime2;
int32_t flush3times;
int32_t lovevalue;
int32_t flush3round;
int32_t npcshoprefresh;
int32_t freeyb;
int32_t gold;
static const char* tablename(){ return "UserInfo"; }
int init(sql_result_row_t& row_);
static int select_user(const int32_t& uid_, sql_result_t &res_);
static int sync_select_user(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Partner_t {
int32_t potential_4;
int32_t pid;
int32_t resid;
int32_t naviClickNum1;
int32_t potential_5;
int32_t grade;
int32_t potential_2;
int32_t naviClickNum2;
int32_t uid;
int32_t potential_3;
int32_t lovevalue;
int32_t potential_1;
int32_t lovelevel;
int32_t exp;
int32_t quality;
static const char* tablename(){ return "Partner"; }
int init(sql_result_row_t& row_);
static int select_partner(const int32_t& uid_, sql_result_t &res_);
static int sync_select_partner(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_UnPrestigeShop_t {
uint32_t buystamp;
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "UnPrestigeShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Report_t {
int32_t id;
int32_t uid;
int32_t reportuid;
static const char* tablename(){ return "Report"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, const int32_t& reportuid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, const int32_t& reportuid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GMail_t {
int32_t count1;
int32_t mid;
int32_t flag;
int32_t validtime;
int32_t opened;
ystring_t<256> info;
int32_t count5;
uint32_t stamp;
int32_t resid;
ystring_t<64> sender;
int32_t item5;
int32_t count3;
int32_t count2;
int32_t rewarded;
int32_t uid;
ystring_t<64> title;
int32_t count4;
int32_t item4;
int32_t item3;
int32_t item2;
int32_t item1;
static const char* tablename(){ return "GMail"; }
int init(sql_result_row_t& row_);
static int select_mid(const int32_t& mid_, sql_result_t &res_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_mid(const int32_t& mid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Item_t {
int32_t itid;
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "Item"; }
int init(sql_result_row_t& row_);
static int select_item_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_item_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GangBossDamage_t {
ystring_t<30> nickname;
int32_t uid;
int32_t lv;
int32_t old_scene;
int32_t last_batt_time;
int32_t ggid;
int32_t in_scene;
int32_t damage;
static const char* tablename(){ return "GangBossDamage"; }
int init(sql_result_row_t& row_);
static int select_ggid(const int32_t& ggid_, sql_result_t &res_);
static int sync_select_ggid(const int32_t& ggid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Equip_t {
int32_t strenlevel;
int32_t pid;
int32_t resid;
int32_t gresid2;
int32_t eid;
int32_t gresid4;
int32_t isweared;
int32_t gresid5;
int32_t gresid3;
int32_t gresid1;
int32_t uid;
static const char* tablename(){ return "Equip"; }
int init(sql_result_row_t& row_);
static int select_equip_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_equip_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GangBoss_t {
int32_t m_join_count;
int32_t m_prepare;
int32_t is_event;
int32_t m_resid;
int32_t top_cut;
int32_t m_hp;
int32_t m_end;
int32_t m_spawned;
int32_t m_grade;
int32_t ggid;
string top;
int32_t m_max_hp;
int32_t m_spawne_time;
int32_t m_start;
int32_t reward_send;
int32_t m_cur_count;
int32_t is_join_reward;
int32_t m_damage;
static const char* tablename(){ return "GangBoss"; }
int init(sql_result_row_t& row_);
static int select_ggid(const int32_t& ggid_, sql_result_t &res_);
static int sync_select_ggid(const int32_t& ggid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_PartnerChip_t {
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "PartnerChip"; }
int init(sql_result_row_t& row_);
static int select_partnerchip(const int32_t& uid_, sql_result_t &res_);
static int sync_select_partnerchip(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_TreasureCoopertive_t {
int32_t profit;
int32_t uid;
int32_t n_help;
int32_t hostnum;
int32_t slot_pos;
int32_t last_stamp;
int32_t last_round;
int32_t debian_secs;
static const char* tablename(){ return "TreasureCoopertive"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ChipSmash_t {
uint32_t buystamp;
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "ChipSmash"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_LimitRound_t {
int32_t uid;
int32_t reset_times;
int32_t lasttime;
static const char* tablename(){ return "LimitRound"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_PrestigeShop_t {
uint32_t buystamp;
int32_t uid;
int32_t count;
int32_t resid;
static const char* tablename(){ return "PrestigeShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_InventoryShop_t {
int32_t shopid;
int32_t uid;
int32_t count;
uint32_t buystamp;
static const char* tablename(){ return "InventoryShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GemPage_t {
int32_t uid;
int32_t slotid;
int32_t resid;
int32_t pageid;
int32_t gemtype;
static const char* tablename(){ return "GemPage"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Chronicle_t {
int32_t state;
int32_t uid;
int32_t step;
int32_t chronicle_month;
int32_t chronicle_day;
static const char* tablename(){ return "Chronicle"; }
int init(sql_result_row_t& row_);
static int select_chronicle(const int32_t& uid_, sql_result_t &res_);
static int select_chronicle_month(const int32_t& uid_, const int32_t& chronicle_month_, sql_result_t &res_);
static int select_chronicle_day(const int32_t& uid_, const int32_t& chronicle_day_, sql_result_t &res_);
static int select_chronicle_undone(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
static int sync_select_chronicle(const int32_t& uid_, sql_result_t &res_);
static int sync_select_chronicle_month(const int32_t& uid_, const int32_t& chronicle_month_, sql_result_t &res_);
static int sync_select_chronicle_day(const int32_t& uid_, const int32_t& chronicle_day_, sql_result_t &res_);
static int sync_select_chronicle_undone(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GuildBattlePartner_t {
int32_t uid;
int32_t pid;
float hp;
static const char* tablename(){ return "GuildBattlePartner"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GuildBattleDefenceInfo_t {
string view_data;
int32_t building_pos;
int32_t pid5;
float hp2;
int32_t ggid;
int32_t pid2;
int32_t building_id;
int32_t pid3;
int32_t uid;
int32_t pid4;
float hp5;
int32_t pid1;
float hp3;
float hp4;
float hp1;
static const char* tablename(){ return "GuildBattleDefenceInfo"; }
int init(sql_result_row_t& row_);
static int select_info(const int32_t& ggid_, const int32_t& building_id_, const int32_t& building_pos_, sql_result_t &res_);
static int sync_select_info(const int32_t& ggid_, const int32_t& building_id_, const int32_t& building_pos_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_SoulUser_t {
int32_t uid;
int32_t hostnum;
ystring_t<30> ctime;
int32_t soullevel;
int32_t soulid;
int32_t soulmoney;
static const char* tablename(){ return "SoulUser"; }
int init(sql_result_row_t& row_);
static int select_id(const int32_t& uid_, sql_result_t &res_);
static int sync_select_id(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardCommentPraise_t {
int32_t praiseuid;
int32_t commentid;
int32_t stamp;
static const char* tablename(){ return "CardCommentPraise"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardComment_t {
int32_t praisenum;
int32_t equiprank;
int32_t resid;
int32_t id;
int32_t grade;
int32_t uid;
string name;
int32_t stamp;
int32_t viplevel;
string comment;
int32_t isshow;
static const char* tablename(){ return "CardComment"; }
int init(sql_result_row_t& row_);
static int select_id(const int32_t& id_, sql_result_t &res_);
static int sync_select_id(const int32_t& id_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RankMatch_t {
int32_t uid;
int32_t stamp;
int32_t hostnum;
int32_t req_times;
string view_data;
int32_t rank_type;
static const char* tablename(){ return "RankMatch"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Chat_t {
int32_t resid;
int32_t id;
string msg;
int32_t grade;
int32_t suid;
string name;
int32_t hostnum;
int32_t typeindex;
int32_t vip;
int32_t quality;
static const char* tablename(){ return "Chat"; }
int init(sql_result_row_t& row_);
static int select_id(const int32_t& id_, sql_result_t &res_);
static int sync_select_id(const int32_t& id_, sql_result_t &res_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventUser_t {
int32_t score;
int32_t goal_level;
int32_t round_status;
int32_t next_count;
int32_t open_level;
int32_t open_times;
int32_t hostnum;
int32_t season;
int32_t round;
float hp5;
float hp4;
int32_t anger;
float hp3;
int32_t coin;
int32_t first_enter_time;
float hp2;
int32_t pid3;
string enemy_view_data;
int32_t pid5;
int32_t pid1;
int32_t uid;
int32_t pid4;
int32_t pid2;
int32_t round_max;
int32_t difficult;
int32_t reset_time;
float hp1;
static const char* tablename(){ return "CardEventUser"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventTeam_t {
int32_t anger;
int32_t uid;
int32_t pid4;
int32_t pid2;
int32_t pid1;
int32_t pid3;
int32_t pid5;
static const char* tablename(){ return "CardEventTeam"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Rank_t {
int32_t uid;
int32_t hostnum;
int32_t id;
int32_t rankindex;
int32_t ranknum;
static const char* tablename(){ return "Rank"; }
int init(sql_result_row_t& row_);
static int select_id(const int32_t& id_, sql_result_t &res_);
static int sync_select_id(const int32_t& id_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RoundStarReward_t {
int rpid;
int32_t uid;
int r4;
int r1;
int r2;
int r3;
static const char* tablename(){ return "RoundStarReward"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventRank_t {
int32_t rank;
int32_t uid;
static const char* tablename(){ return "CardEventRank"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Activity_t {
ystring_t<30> nickname;
int32_t cumu_yb_rank_exp;
int32_t grade;
int32_t con_wing_given;
int32_t uid;
uint32_t con_wing_stamp;
int32_t hostnum;
uint32_t cumu_yb_rank_stamp;
int32_t con_wing_rank;
int32_t con_wing_score;
int32_t cumu_yb_rank;
static const char* tablename(){ return "Activity"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_BuyLog_t {
ystring_t<30> nickname;
int32_t fpoint;
int32_t resid;
int32_t price;
ystring_t<30> buytm;
ystring_t<10> domain;
ystring_t<30> itemname;
int32_t payyb;
int32_t uid;
int32_t count;
int32_t hostnum;
int32_t buytype;
int32_t aid;
int32_t freeyb;
int32_t vip;
static const char* tablename(){ return "BuyLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_CardEventRound_t {
string view_data;
int32_t eid;
int32_t pid4;
int32_t pid2;
int32_t pid1;
int32_t round;
int32_t pid5;
int32_t pid3;
static const char* tablename(){ return "CardEventRound"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& eid_, sql_result_t &res_);
static int sync_select_all(const int32_t& eid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_UserID_t {
ystring_t<30> nickname;
int32_t resid;
int32_t grade;
int32_t state;
int32_t uid;
int32_t wingid;
int32_t hostnum;
int32_t aid;
int32_t isoverdue;
int32_t viplevel;
static const char* tablename(){ return "UserID"; }
int init(sql_result_row_t& row_);
static int select_user(const int32_t& aid_, const int32_t& hostnum_, sql_result_t &res_);
static int select_uid_state(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
static int select_all_uid_state(const int32_t& aid_, const int32_t& state_, sql_result_t &res_);
static int select_uid_condition(const int32_t& uid_, const char* condition_, sql_result_t &res_);
static int select_user_state(const int32_t& aid_, const int32_t& hostnum_, const int32_t& state_, sql_result_t &res_);
static int select_user_condition(const int32_t& aid_, const int32_t& hostnum_, const char* condition_, sql_result_t &res_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_user(const int32_t& aid_, const int32_t& hostnum_, sql_result_t &res_);
static int sync_select_uid_state(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
static int sync_select_all_uid_state(const int32_t& aid_, const int32_t& state_, sql_result_t &res_);
static int sync_select_uid_condition(const int32_t& uid_, const char* condition_, sql_result_t &res_);
static int sync_select_user_state(const int32_t& aid_, const int32_t& hostnum_, const int32_t& state_, sql_result_t &res_);
static int sync_select_user_condition(const int32_t& aid_, const int32_t& hostnum_, const char* condition_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Friend_t {
int32_t fuid;
int32_t uid;
int32_t hasSendFlower;
static const char* tablename(){ return "Friend"; }
int init(sql_result_row_t& row_);
static int select_friend(const int32_t& uid_, sql_result_t &res_);
static int sync_select_friend(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ComboPro_t {
int32_t exp5;
int32_t exp1;
int32_t o4;
int32_t o1;
int32_t uid;
int32_t o3;
int32_t o2;
int32_t exp4;
int32_t exp2;
int32_t o5;
int32_t exp3;
static const char* tablename(){ return "ComboPro"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RunePage_t {
int32_t id;
int32_t uid;
int32_t pid;
int32_t slot;
static const char* tablename(){ return "RunePage"; }
int init(sql_result_row_t& row_);
static int select_rune_page_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_rune_page_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Bullet_t {
int32_t uid;
uint32_t stamp;
uint32_t round;
ystring_t<30> msg;
int32_t pos;
static const char* tablename(){ return "Bullet"; }
int init(sql_result_row_t& row_);
static int select_round(const uint32_t& round_, sql_result_t &res_);
static int sync_select_round(const uint32_t& round_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ExpeditionShop_t {
int32_t uid;
int32_t count;
int32_t eshopindex;
int32_t eshopid;
int32_t refresh_time;
static const char* tablename(){ return "ExpeditionShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ConsumeLog_t {
ystring_t<30> nickname;
int32_t resid;
ystring_t<10> domain;
int32_t balance;
int32_t uid;
int32_t count;
int32_t hostnum;
int32_t consumetype;
int32_t aid;
ystring_t<30> itemname;
ystring_t<30> consumetm;
static const char* tablename(){ return "ConsumeLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Team_t {
int32_t is_default;
int32_t p5;
int32_t uid;
ystring_t<30> name;
int32_t p4;
int32_t p2;
int32_t p3;
int32_t tid;
int32_t p1;
static const char* tablename(){ return "Team"; }
int init(sql_result_row_t& row_);
static int select_team_default(const int32_t& uid_, const int32_t& is_default_, sql_result_t &res_);
static int select_team_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_team_default(const int32_t& uid_, const int32_t& is_default_, sql_result_t &res_);
static int sync_select_team_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ExpeditionPartners_t {
int32_t uid;
int32_t pid;
float hp;
static const char* tablename(){ return "ExpeditionPartners"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Task_t {
int32_t state;
int32_t uid;
int32_t step;
int32_t resid;
static const char* tablename(){ return "Task"; }
int init(sql_result_row_t& row_);
static int select_task(const int32_t& uid_, sql_result_t &res_);
static int sync_select_task(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Server_t {
int32_t serid;
uint32_t wbcut;
uint32_t ctime;
int32_t maxlv;
int32_t bosslv;
uint32_t result_rank_stamp;
static const char* tablename(){ return "Server"; }
int init(sql_result_row_t& row_);
static int select_server(const int32_t& serid_, sql_result_t &res_);
static int sync_select_server(const int32_t& serid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RewardExtentionI_t {
int32_t sevenpay_count;
ystring_t<30> limit_seven_stage;
int32_t opentask_stage_two;
ystring_t<30> sevenpay_stage;
int32_t opentask_reward;
int32_t vip_days;
int32_t luckbagvalue;
int32_t limit_seven_count;
int32_t openybtotal;
int32_t vip_stamp;
int32_t limit_seven_stamp;
int32_t limit_pub;
int32_t opentask_stage_one;
int32_t uid;
int32_t opentask_stage_three;
int32_t opentask_level;
int32_t openybstamp;
int32_t luckbagstamp;
int32_t lastpay_timestamp;
ystring_t<30> openybreward;
static const char* tablename(){ return "RewardExtentionI"; }
int init(sql_result_row_t& row_);
static int select_reward(const int32_t& uid_, sql_result_t &res_);
static int sync_select_reward(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Cdkey_t {
ystring_t<30> expire_date;
int32_t uid;
ystring_t<8> sn;
int32_t flag;
ystring_t<30> giventm;
ystring_t<30> domain;
ystring_t<30> nickname;
static const char* tablename(){ return "Cdkey"; }
int init(sql_result_row_t& row_);
static int select_sn(const ystring_t<8>& sn_, sql_result_t &res_);
static int sync_select_sn(const ystring_t<8>& sn_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_NewAccount_t {
ystring_t<30> ctime;
int32_t aid;
ystring_t<10> domain;
ystring_t<64> name;
static const char* tablename(){ return "NewAccount"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_RuneShop_t {
int32_t rshopid;
int32_t uid;
int32_t count;
int32_t rshopindex;
int32_t refresh_time;
static const char* tablename(){ return "RuneShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_NpcShop_t {
int32_t item2;
int32_t uid;
int32_t item6;
int32_t item5;
int32_t item4;
int32_t item3;
int32_t item1;
static const char* tablename(){ return "NpcShop"; }
int init(sql_result_row_t& row_);
static int select_npcshop(const int32_t& uid_, sql_result_t &res_);
static int sync_select_npcshop(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_FpException_t {
ystring_t<30> nickname;
int32_t uid;
int32_t resfp;
int32_t hostnum;
int32_t rolefp;
int32_t aid;
ystring_t<10> domain;
int32_t resid;
static const char* tablename(){ return "FpException"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Pet_t {
int32_t hp;
int32_t uid;
int32_t atk;
int32_t resid;
int32_t res;
int32_t mgc;
int32_t petid;
int32_t def;
static const char* tablename(){ return "Pet"; }
int init(sql_result_row_t& row_);
static int select_pet(const int32_t& uid_, sql_result_t &res_);
static int sync_select_pet(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_TreasureConqueror_t {
int32_t profit;
int32_t uid;
int32_t debian_secs;
int32_t hostnum;
int32_t slot_pos;
int32_t last_stamp;
int32_t last_round;
int32_t n_rob;
static const char* tablename(){ return "TreasureConqueror"; }
int init(sql_result_row_t& row_);
static int select_uid(const int32_t& uid_, sql_result_t &res_);
static int sync_select_uid(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_GangShop_t {
int32_t uid;
int32_t count;
int32_t gshopid;
int32_t gshopindex;
int32_t refresh_time;
static const char* tablename(){ return "GangShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_EventLog_t {
ystring_t<30> nickname;
int32_t resid;
int32_t eventid;
ystring_t<10> domain;
ystring_t<300> extra;
int32_t uid;
int32_t count;
int32_t hostnum;
ystring_t<30> eventm;
int32_t aid;
int32_t flag;
int32_t code;
static const char* tablename(){ return "EventLog"; }
int init(sql_result_row_t& row_);
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_LmtShop_t {
int32_t uid;
int32_t count;
int32_t shopindex;
int32_t shopid;
uint32_t refresh_time;
static const char* tablename(){ return "LmtShop"; }
int init(sql_result_row_t& row_);
static int select_all(const int32_t& uid_, sql_result_t &res_);
static int sync_select_all(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_ReportUser_t {
int32_t reportNum;
int32_t uid;
int32_t reportTime;
int32_t accusedNum;
static const char* tablename(){ return "ReportUser"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Rune_t {
int32_t uid;
int32_t pid;
int32_t resid;
int32_t rid;
int32_t exp;
int32_t pos;
static const char* tablename(){ return "Rune"; }
int init(sql_result_row_t& row_);
static int select_rune(const int32_t& uid_, sql_result_t &res_);
static int sync_select_rune(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Arena_t {
uint32_t stamp;
int32_t fight_count;
int32_t uid;
int32_t in_buy;
int32_t target_id;
int32_t win_count;
uint32_t in_stamp;
int32_t n_buy;
int32_t in_fight_count;
static const char* tablename(){ return "Arena"; }
int init(sql_result_row_t& row_);
static int select(const int32_t& uid_, sql_result_t &res_);
static int sync_select(const int32_t& uid_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Pay_t {
ystring_t<32> uin;
int32_t cristal;
ystring_t<32> appid;
ystring_t<32> giventime;
ystring_t<32> paytime;
ystring_t<10> domain;
int32_t repo_rmb;
int32_t state;
int32_t serid;
int32_t goodsid;
int32_t goodnum;
int32_t reward_cristal;
int32_t pay_rmb;
int32_t uid;
int32_t sid;
static const char* tablename(){ return "Pay"; }
int init(sql_result_row_t& row_);
static int select_serid(const int32_t& serid_, sql_result_t &res_);
static int select_uid_state(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
static int sync_select_serid(const int32_t& serid_, sql_result_t &res_);
static int sync_select_uid_state(const int32_t& uid_, const int32_t& state_, sql_result_t &res_);
int update();
int sync_update();
int insert();
string gen_insert_sql();
int sync_insert();
};
struct db_Account_t {
ystring_t<64> name;
int32_t lasthostnum;
int32_t flag;
int32_t aid;
ystring_t<10> domain;
int32_t lastuid;
static const char* tablename(){ return "Account"; }
int init(sql_result_row_t& row_);
static int select_aid(const int32_t& aid_, sql_result_t &res_);
static int select_name(const ystring_t<10>& domain_, const ystring_t<64>& name_, sql_result_t &res_);
static int sync_select_aid(const int32_t& aid_, sql_result_t &res_);
static int sync_select_name(const ystring_t<10>& domain_, const ystring_t<64>& name_, sql_result_t &res_);
int update();
int sync_update();
int remove();
int insert();
string gen_insert_sql();
int sync_insert();
};
#endif
